(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{50:function(t,e,s){var a=s(52);"string"==typeof a&&(a=[[t.i,a,""]]),a.locals&&(t.exports=a.locals);(0,s(7).default)("0735e316",a,!0,{sourceMap:!1})},51:function(t,e,s){"use strict";var a=s(50);s.n(a).a},52:function(t,e,s){(t.exports=s(6)(!1)).push([t.i,".recent-posts .row[data-v-2e1faa44]{padding-top:50px}",""])},53:function(t,e,s){"use strict";s.r(e);var a=s(10),n=s.n(a),o={components:{Navbar:s(19).a},props:["page"],methods:{formatDate:function(t){return n()(t)}}},i=(s(51),s(3)),l=Object(i.a)(o,(function(){var t=this,e=t.$createElement,s=t._self._c||e;return t.page.posts?s("div",{staticClass:"recent-posts"},[s("navbar"),t._v(" "),s("b-row",[s("b-col",{attrs:{cols:"4",offset:"4"}},[s("b-card",[s("b-list-group",t._l(t.page.posts,(function(e){return s("b-list-group-item",{key:e.permalink,attrs:{href:e.permalink}},[s("div",{staticClass:"d-flex w-100 justify-content-between"},[s("h5",{staticClass:"text-primary"},[t._v(t._s(e.title))]),t._v(" "),s("small",[t._v(t._s(t.formatDate(e.createdAt)))])])])})),1)],1)],1)],1)],1):t._e()}),[],!1,null,"2e1faa44",null).exports,r={render:function(t){return t("layout-manager",{scopedSlots:{component:function(e){return t(l,{props:e})}}})}},p=function(t){var e,s,a,n,o=(e=void 0,n={},(s={}).type=a="page",s.internal=e,s.contentType="vue",s.slug="index",s.content=e,s.createdAt=new Date(1577146705264),s.updatedAt=new Date(1577146705264),s.injectAllPosts=!0,s.permalink="/",s.assets={},s.attributes=s,s.posts=[n],s.pagination={hasPrev:!1,hasNext:!1,total:1,current:1,prevLink:"/page/2",nextLink:e},n.type="post",n.internal=e,n.contentType="markdown",n.slug="postgres-lvm-snapshot",n.content=e,n.createdAt=new Date(1583172e6),n.updatedAt=new Date(1583204147533),n.title="PostgreSQL LVM Snapshotting",n.date="2020-03-02T12:00:00",n.layout=a,n.markdownHeadings=[{text:"Background",slug:"background",level:2},{text:"LVM",slug:"lvm",level:2},{text:"Loopback",slug:"loopback",level:3},{text:"Ubuntu Thin Provisioning",slug:"ubuntu-thin-provisioning",level:3},{text:"Volumes",slug:"volumes",level:3},{text:"Physical Volumes",slug:"physical-volumes",level:4},{text:"Volume Groups",slug:"volume-groups",level:4},{text:"Logical Volumes",slug:"logical-volumes",level:4},{text:"Snapshotting",slug:"snapshotting",level:3},{text:"Create",slug:"create",level:4},{text:"Revert",slug:"revert",level:4}],n.excerpt='<p>As a test engineer, I need the ability to quickly reset changes I have made to databases, either directly or indirectly.\nMicrosoft SQL Server (MSSQL) has the ability to create and reset database-level snapshots and this functionality has\nproven quite invaluable in my testing. Not only is it easy to create and reset snapshots, but the process is fast--at\nleast, it has been in my use cases. Unfortunately, I also work a lot with PostgreSQL (Postgres) and at the time of this\nwriting, such a snapshot-revert system does not exist. Supposedly the\n<a href="https://www.postgresql.org/docs/10/continuous-archiving.html">Point-in-Time Recovery</a> (PiTR) system can be used to\nsnapshot a database and then revert it, but this involves performing a full database restore and then replaying the\nWAL files until the point the snapshot occurred. This can take quite a bit of time, especially if the database is large.\nI searched to no avail for an open source tool or plugin that would accomplish this task but eventually settled on a\nmethod of using <a href="https://en.wikipedia.org/wiki/Logical_Volume_Manager_(Linux)">Linux LVM</a> to accomplish this task for\nme.</p>\n',n.permalink="/posts/postgres-lvm-snapshot.html",n.assets={},n.attributes=n,s),i=t.options.beforeCreate||[];t.options.beforeCreate=[function(){this.$page=o}].concat(i);["layout","transition"].forEach((function(e){var s=t.options.PageComponent;s&&(t.options[e]=s[e]),void 0===t.options[e]&&(t.options[e]=o[e])})),o.slug&&(t.options.name="page-wrapper-"+o.slug.replace(/[^0-9a-z\-]/gi,"-"))},u=Object(i.a)(r,void 0,void 0,!1,null,null,null);"function"==typeof p&&p(u);e.default=u.exports}}]);